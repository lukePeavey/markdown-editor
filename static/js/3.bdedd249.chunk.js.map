{"version":3,"sources":["../static/js/3.bdedd249.chunk.js","../node_modules/monaco-editor/esm/vs/language/html/htmlMode.js","../node_modules/monaco-editor/esm/vs/language/html/workerManager.js","../node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js","../node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js"],"names":["webpackJsonp","1357","module","__webpack_exports__","__webpack_require__","setupMode","defaults","client","__WEBPACK_IMPORTED_MODULE_0__workerManager_js__","worker","uris","_i","arguments","length","getLanguageServiceWorker","apply","languageId","monaco","languages","registerCompletionItemProvider","__WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__","registerDocumentHighlightProvider","registerLinkProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","Object","defineProperty","value","1585","toShallowCancelPromise","p","completeCallback","errorCallback","r","Promise","c","e","then","d","WorkerManager","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","createData","languageSettings","options","label","getProxy","resources","_","withSyncedResources","1586","toSeverity","lsSeverity","__WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__","Error","MarkerSeverity","Warning","Information","Info","Hint","toDiagnostics","resource","diag","code","String","severity","startLineNumber","range","start","line","startColumn","character","endLineNumber","end","endColumn","message","source","fromPosition","position","column","lineNumber","fromRange","getStartPosition","getEndPosition","toRange","Range","toCompletionItemKind","kind","mItemKind","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toTextEdit","textEdit","text","newText","toHighlighKind","mKind","DocumentHighlightKind","Read","Write","fromFormattingOptions","tabSize","insertSpaces","wireCancellationToken","token","promise","cancel","onCancellationRequested","DiagnosticsAdapter","CompletionAdapter","DocumentHighlightAdapter","DocumentLinkAdapter","DocumentFormattingEditProvider","DocumentRangeFormattingEditProvider","Uri","_languageId","_disposables","_listener","create","onModelAdd","model","modeId","getModeId","handle","uri","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","getModels","forEach","key","doValidation","diagnostics","markers","map","getModel","undefined","err","console","error","get","enumerable","configurable","provideCompletionItems","getWordUntilPosition","doComplete","info","items","entry","item","insertText","sortText","filterText","documentation","detail","insertTextFormat","isIncomplete","provideDocumentHighlights","findDocumentHighlights","provideLinks","findDocumentLinks","url","target","provideDocumentFormattingEdits","format","edits","provideDocumentRangeFormattingEdits","1587","DiagnosticSeverity","TextEdit","MarkupKind","InsertTextFormat","SymbolKind","Position","is","candidate","Is","defined","number","one","two","three","four","Location","string","Diagnostic","result","Command","title","command","args","replace","insert","del","TextDocumentEdit","textDocument","VersionedTextDocumentIdentifier","Array","isArray","TextDocumentIdentifier","TextEditChangeImpl","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","_workspaceEdit","documentChanges","textDocumentEdit","textEditChange","changes","keys","getTextEditChange","version","TextDocumentItem","PlainText","Markdown","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","CompletionItem","CompletionList","MarkedString","fromPlainText","plainText","ParameterInformation","SignatureInformation","parameters","DocumentHighlight","Namespace","Package","Number","Boolean","Key","Null","SymbolInformation","name","containerName","location","CodeActionContext","typedArray","CodeLens","data","FormattingOptions","boolean","DocumentLink","TextDocument","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","a","b","lastModifiedOffset","i","startOffset","endOffset","substring","compare","left","slice","right","leftIdx","rightIdx","ret","TextDocumentSaveReason","Manual","AfterDelay","FocusOut","_uri","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","call","check","every"],"mappings":"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","file":"static/js/3.bdedd249.chunk.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 1357:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"setupMode\"] = setupMode;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__workerManager_js__ = __webpack_require__(1585);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__ = __webpack_require__(1586);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\nfunction setupMode(defaults) {\n    var client = new __WEBPACK_IMPORTED_MODULE_0__workerManager_js__[\"a\" /* WorkerManager */](defaults);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    // all modes\n    monaco.languages.registerCompletionItemProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"a\" /* CompletionAdapter */](worker));\n    monaco.languages.registerDocumentHighlightProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"d\" /* DocumentHighlightAdapter */](worker));\n    monaco.languages.registerLinkProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"e\" /* DocumentLinkAdapter */](worker));\n    // only html\n    if (languageId === 'html') {\n        monaco.languages.registerDocumentFormattingEditProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"c\" /* DocumentFormattingEditProvider */](worker));\n        monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"f\" /* DocumentRangeFormattingEditProvider */](worker));\n        new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"b\" /* DiagnosticsAdapter */](languageId, worker, defaults);\n    }\n}\n\n\n/***/ }),\n\n/***/ 1585:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return WorkerManager; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `HTMLWorker` instance\n                moduleId: 'vs/language/html/htmlWorker',\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.options,\n                    languageId: this._defaults.languageId\n                },\n                label: this._defaults.languageId\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\n\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n\n\n/***/ }),\n\n/***/ 1586:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DiagnosticsAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CompletionAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return DocumentHighlightAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return DocumentLinkAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return DocumentFormattingEditProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return DocumentRangeFormattingEditProvider; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__ = __webpack_require__(1587);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                monaco.editor.setModelMarkers(monaco.editor.getModel(resource), languageId, markers);\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\n\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Error: return monaco.MarkerSeverity.Error;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Warning: return monaco.MarkerSeverity.Warning;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Information: return monaco.MarkerSeverity.Info;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: fromPosition(range.getStartPosition()), end: fromPosition(range.getEndPosition()) };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Text: return mItemKind.Text;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Method: return mItemKind.Method;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Function: return mItemKind.Function;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Constructor: return mItemKind.Constructor;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Field: return mItemKind.Field;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Variable: return mItemKind.Variable;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Class: return mItemKind.Class;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Interface: return mItemKind.Interface;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Module: return mItemKind.Module;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Property: return mItemKind.Property;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Unit: return mItemKind.Unit;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Value: return mItemKind.Value;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Enum: return mItemKind.Enum;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Keyword: return mItemKind.Keyword;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Snippet: return mItemKind.Snippet;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Color: return mItemKind.Color;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].File: return mItemKind.File;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Text;\n        case mItemKind.Method: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Method;\n        case mItemKind.Function: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Function;\n        case mItemKind.Constructor: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Constructor;\n        case mItemKind.Field: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Field;\n        case mItemKind.Variable: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Variable;\n        case mItemKind.Class: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Class;\n        case mItemKind.Interface: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Interface;\n        case mItemKind.Module: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Module;\n        case mItemKind.Property: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Property;\n        case mItemKind.Unit: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Unit;\n        case mItemKind.Value: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Value;\n        case mItemKind.Enum: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Enum;\n        case mItemKind.Keyword: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Keyword;\n        case mItemKind.Snippet: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Snippet;\n        case mItemKind.Color: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Color;\n        case mItemKind.File: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].File;\n        case mItemKind.Reference: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Reference;\n    }\n    return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* MarkupKind */].PlainText : __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* MarkupKind */].Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"d\" /* InsertTextFormat */].Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"g\" /* TextEdit */].replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return ['.', ':', '<', '\"', '=', '/'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"d\" /* InsertTextFormat */].Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\n\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].File: return mKind.Array;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Module: return mKind.Module;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Namespace: return mKind.Namespace;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Package: return mKind.Package;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Class: return mKind.Class;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Method: return mKind.Method;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Property: return mKind.Property;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Field: return mKind.Field;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Constructor: return mKind.Constructor;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Enum: return mKind.Enum;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Interface: return mKind.Interface;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Function: return mKind.Function;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Variable: return mKind.Variable;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Constant: return mKind.Constant;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].String: return mKind.String;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Number: return mKind.Number;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Boolean: return mKind.Boolean;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nfunction toHighlighKind(kind) {\n    var mKind = monaco.languages.DocumentHighlightKind;\n    switch (kind) {\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"c\" /* DocumentHighlightKind */].Read: return mKind.Read;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"c\" /* DocumentHighlightKind */].Write: return mKind.Write;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"c\" /* DocumentHighlightKind */].Text: return mKind.Text;\n    }\n    return mKind.Text;\n}\nvar DocumentHighlightAdapter = /** @class */ (function () {\n    function DocumentHighlightAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentHighlights(resource.toString(), fromPosition(position)); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                kind: toHighlighKind(item.kind)\n            }); });\n        }));\n    };\n    return DocumentHighlightAdapter;\n}());\n\nvar DocumentLinkAdapter = /** @class */ (function () {\n    function DocumentLinkAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentLinkAdapter.prototype.provideLinks = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentLinks(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                url: item.target\n            }); });\n        }));\n    };\n    return DocumentLinkAdapter;\n}());\n\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\n\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\n\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n\n\n/***/ }),\n\n/***/ 1587:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Position */\n/* unused harmony export Range */\n/* unused harmony export Location */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DiagnosticSeverity; });\n/* unused harmony export Diagnostic */\n/* unused harmony export Command */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return TextEdit; });\n/* unused harmony export TextDocumentEdit */\n/* unused harmony export WorkspaceChange */\n/* unused harmony export TextDocumentIdentifier */\n/* unused harmony export VersionedTextDocumentIdentifier */\n/* unused harmony export TextDocumentItem */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return MarkupKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CompletionItemKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return InsertTextFormat; });\n/* unused harmony export CompletionItem */\n/* unused harmony export CompletionList */\n/* unused harmony export MarkedString */\n/* unused harmony export ParameterInformation */\n/* unused harmony export SignatureInformation */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return DocumentHighlightKind; });\n/* unused harmony export DocumentHighlight */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return SymbolKind; });\n/* unused harmony export SymbolInformation */\n/* unused harmony export CodeActionContext */\n/* unused harmony export CodeLens */\n/* unused harmony export FormattingOptions */\n/* unused harmony export DocumentLink */\n/* unused harmony export EOL */\n/* unused harmony export TextDocument */\n/* unused harmony export TextDocumentSaveReason */\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nvar Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nvar Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nvar Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The diagnostic's serverity.\n */\nvar DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nvar Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nvar Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.title);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nvar TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nvar TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits) {\n        this.edits = edits;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\n        this.edits.push(TextEdit.insert(position, newText));\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\n        this.edits.push(TextEdit.replace(range, newText));\n    };\n    TextEditChangeImpl.prototype.delete = function (range) {\n        this.edits.push(TextEdit.del(range));\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            return this._workspaceEdit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (VersionedTextDocumentIdentifier.is(key)) {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    documentChanges: []\n                };\n            }\n            if (!this._workspaceEdit.documentChanges) {\n                throw new Error('Workspace edit is not configured for versioned document changes.');\n            }\n            var textDocument = key;\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    changes: Object.create(null)\n                };\n            }\n            if (!this._workspaceEdit.changes) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    return WorkspaceChange;\n}());\n\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nvar TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nvar VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nvar TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nvar MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n/**\n * The kind of a completion entry.\n */\nvar CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nvar InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nvar CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nvar CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nvar MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n})(MarkedString || (MarkedString = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nvar ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n    ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nvar SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nvar DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrance.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nvar DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nvar SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nvar SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containg the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nvar CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics) {\n        return { diagnostics: diagnostics };\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nvar CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data))\n            result.data = data;\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nvar FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * A document link is a range in a text document that links to an internal or external resource, like another\n * text document or a web site.\n */\nvar DocumentLink = /** @class */ (function () {\n    function DocumentLink() {\n    }\n    return DocumentLink;\n}());\n\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target) {\n        return { range: range, target: target };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\nvar EOL = ['\\n', '\\r\\n', '\\r'];\nvar TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return 0;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Ovelapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nvar TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = null;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = null;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === null) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/3.bdedd249.chunk.js","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nexport function setupMode(defaults) {\n    var client = new WorkerManager(defaults);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    // all modes\n    monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\n    monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\n    monaco.languages.registerLinkProvider(languageId, new languageFeatures.DocumentLinkAdapter(worker));\n    // only html\n    if (languageId === 'html') {\n        monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker));\n        monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker));\n        new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/htmlMode.js\n// module id = 1357\n// module chunks = 3","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `HTMLWorker` instance\n                moduleId: 'vs/language/html/htmlWorker',\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.options,\n                    languageId: this._defaults.languageId\n                },\n                label: this._defaults.languageId\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/workerManager.js\n// module id = 1585\n// module chunks = 3","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                monaco.editor.setModelMarkers(monaco.editor.getModel(resource), languageId, markers);\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: fromPosition(range.getStartPosition()), end: fromPosition(range.getEndPosition()) };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? ls.MarkupKind.PlainText : ls.MarkupKind.Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = ls.InsertTextFormat.Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = ls.TextEdit.replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return ['.', ':', '<', '\"', '=', '/'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nfunction toHighlighKind(kind) {\n    var mKind = monaco.languages.DocumentHighlightKind;\n    switch (kind) {\n        case ls.DocumentHighlightKind.Read: return mKind.Read;\n        case ls.DocumentHighlightKind.Write: return mKind.Write;\n        case ls.DocumentHighlightKind.Text: return mKind.Text;\n    }\n    return mKind.Text;\n}\nvar DocumentHighlightAdapter = /** @class */ (function () {\n    function DocumentHighlightAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentHighlights(resource.toString(), fromPosition(position)); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                kind: toHighlighKind(item.kind)\n            }); });\n        }));\n    };\n    return DocumentHighlightAdapter;\n}());\nexport { DocumentHighlightAdapter };\nvar DocumentLinkAdapter = /** @class */ (function () {\n    function DocumentLinkAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentLinkAdapter.prototype.provideLinks = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentLinks(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                url: item.target\n            }); });\n        }));\n    };\n    return DocumentLinkAdapter;\n}());\nexport { DocumentLinkAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js\n// module id = 1586\n// module chunks = 3","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The diagnostic's serverity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.title);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits) {\n        this.edits = edits;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\n        this.edits.push(TextEdit.insert(position, newText));\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\n        this.edits.push(TextEdit.replace(range, newText));\n    };\n    TextEditChangeImpl.prototype.delete = function (range) {\n        this.edits.push(TextEdit.del(range));\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            return this._workspaceEdit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (VersionedTextDocumentIdentifier.is(key)) {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    documentChanges: []\n                };\n            }\n            if (!this._workspaceEdit.documentChanges) {\n                throw new Error('Workspace edit is not configured for versioned document changes.');\n            }\n            var textDocument = key;\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    changes: Object.create(null)\n                };\n            }\n            if (!this._workspaceEdit.changes) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n})(MarkedString || (MarkedString = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n    ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrance.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containg the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics) {\n        return { diagnostics: diagnostics };\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data))\n            result.data = data;\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * A document link is a range in a text document that links to an internal or external resource, like another\n * text document or a web site.\n */\nvar DocumentLink = /** @class */ (function () {\n    function DocumentLink() {\n    }\n    return DocumentLink;\n}());\nexport { DocumentLink };\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target) {\n        return { range: range, target: target };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return 0;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Ovelapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nexport var TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = null;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = null;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === null) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js\n// module id = 1587\n// module chunks = 3"],"sourceRoot":""}